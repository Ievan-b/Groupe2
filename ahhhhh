import xmlrpc.client
import base64

class SauvegardeurImageProduitOdoo:
    def __init__(self, url, db, nom_utilisateur, mot_de_passe, nom_societe):
        self.url = url
        self.db = db
        self.nom_utilisateur = nom_utilisateur
        self.mot_de_passe = mot_de_passe
        self.nom_societe = nom_societe
        self.models = self.configurer_connexion()

    def configurer_connexion(self):
        try:
            common = xmlrpc.client.ServerProxy(f'{self.url}/xmlrpc/2/common')
            uid = common.authenticate(self.db, self.nom_utilisateur, self.mot_de_passe, {})
            if uid:
                models = xmlrpc.client.ServerProxy(f'{self.url}/xmlrpc/2/object', allow_none=True)
                models.uid = uid
                return models
            else:
                print("Échec de l'authentification.")
                return None
        except Exception as e:
            print(f"Erreur lors de la configuration de la connexion : {e}")
            return None

    def obtenir_ids_produits(self):
        try:
            ids_produits = self.models.execute_kw(
                self.db, self.models.uid, self.mot_de_passe,
                'product.template', 'search', [[]]
            )
            return ids_produits
        except Exception as e:
            print(f"Erreur lors de la récupération des identifiants de produits : {e}")
            return []

    def sauvegarder_image_produit(self, id_produit, nom_image):
        try:
            produit = self.models.execute_kw(
                self.db, self.models.uid, self.mot_de_passe,
                'product.template', 'read',
                [id_produit],
                {'fields': ['image_1920']}
            )

            if produit and produit[0].get('image_1920'):
                bytes_image = base64.b64decode(produit[0]['image_1920'])
                with open(f"{nom_image}_{id_produit}.png", 'wb') as fichier:
                    fichier.write(bytes_image)
                print(f"Image pour l'ID du produit {id_produit} sauvegardée sous {nom_image}_{id_produit}.png")
            else:
                print(f"Aucune image trouvée pour l'ID du produit {id_produit}")

        except Exception as e:
            print(f"Erreur lors de la sauvegarde de l'image du produit : {e}")

if __name__ == "__main__":
    url = 'http://192.168.201.216:8069'
    db = 'Touch_db'
    nom_utilisateur = 'Log'
    mot_de_passe = '1234'
    nom_societe = 'Touch Tech Solution'
    sauvegardeur_image = SauvegardeurImageProduitOdoo(url, db, nom_utilisateur, mot_de_passe, nom_societe)

    if sauvegardeur_image.models:
        print("Connexion réussie à Odoo")
        # Récupérer et afficher les ID des produits
        ids_produits = sauvegardeur_image.obtenir_ids_produits()
        print("ID des produits :", ids_produits)

        # Sauvegarder les images pour chaque produit
        for id_produit in ids_produits:
            sauvegardeur_image.sauvegarder_image_produit(id_produit, "image_produit")
    else:
        print("La connexion n'a pas été établie avec succès.")

