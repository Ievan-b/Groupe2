import tkinter as tk
from tkinter import ttk  # Importer le module ttk pour des styles améliorés
from PIL import Image, ImageTk # Importez les classes nécessaires de Pillow

# Variable pour suivre l'état du bouton SHIFT
shift_button_state = False
global num_var
NbSouris = 0
NbClavier = 0
NbMoniteur = 0
# Fonction appelée lorsqu'un bouton est cliqué
def button_click(button_number):
    global shift_button_state
    shift_button_state = not shift_button_state

# Fonction appelée lors de la fermeture de la fenêtre
def on_closing():
    # Retirer la configuration de la fenêtre en plein écran
    window.attributes('-fullscreen', False)
    window.destroy()

# Création de la fenêtre principale
window = tk.Tk()
window.title("Interface de Base")

# Définir la fenêtre en plein écran
window.attributes('-fullscreen', True)

# Création d'un canevas pour les formes
canvas = tk.Canvas(window, width=window.winfo_reqwidth(), height=window.winfo_reqheight())
canvas.pack(fill=tk.BOTH, expand=True)

# Création de boutons avec place
button1 = tk.Button(window, text="-", command=lambda: button_click(1), width=10, height=3, bg="#999999", fg="white")
button1.place(relx=0.65, rely=0.35, anchor=tk.W)  # ancrage à gauche

button2 = tk.Button(window, text="+", command=lambda: button_click(2), width=10, height=3, bg="#999999", fg="white")
button2.place(relx=0.85, rely=0.35, anchor=tk.W)  # ancrage à gauche

button3 = tk.Button(window, text="-", command=lambda: button_click(3), width=10, height=3, bg="#999999", fg="white")
button3.place(relx=0.65, rely=0.60, anchor=tk.W)  # ancrage à gauche

button4 = tk.Button(window, text="+", command=lambda: button_click(4), width=10, height=3, bg="#999999", fg="white")
button4.place(relx=0.85, rely=0.60, anchor=tk.W)  # ancrage à gauche

button5 = tk.Button(window, text="-", command=lambda: button_click(5), width=10, height=3, bg="#999999", fg="white")
button5.place(relx=0.65, rely=0.85, anchor=tk.W)  # ancrage à gauche

button6 = tk.Button(window, text="+", command=lambda: button_click(6), width=10, height=3, bg="#999999", fg="white")
button6.place(relx=0.85, rely=0.85, anchor=tk.W)  # ancrage à gauche

# Création du premier widget Label pour NbSouris
label_souris = tk.Label(window, text=f"{NbSouris}", font=("Arial", 14))
label_souris.place(relx=0.78, rely=0.35, anchor=tk.W)

# Création du deuxième widget Label pour NbClavier
label_clavier = tk.Label(window, text=f"{NbClavier}", font=("Arial", 14))
label_clavier.place(relx=0.78, rely=0.60, anchor=tk.W)

# Création du troisième widget Label pour NbMoniteur
label_moniteur = tk.Label(window, text=f"{NbMoniteur}", font=("Arial", 14))
label_moniteur.place(relx=0.78, rely=0.85, anchor=tk.W)

# Liste des noms de fichiers d'images
image_files = ["Clavier.jpg", "Souris.jpg", "Moniteur.jpg"]  # Ajoutez les noms de vos fichiers d'images

# Liste pour stocker les objets PhotoImage
image_tk_list = []

# Charger et convertir chaque image en PhotoImage de Tkinter
for filename in image_files:
    image_pil = Image.open(filename)
    image_tk = ImageTk.PhotoImage(image_pil)
    image_tk_list.append(image_tk)

# Créer des widgets Label pour chaque image et les positionner côte à côte
for image_tk in image_tk_list:
    label = tk.Label(window,image=image_tk)
    label.pack(side=tk.BOTTOM, padx=0, pady=20)  # Affichage côte à côte avec un padding

# Bouton de fermeture en haut à droite
close_button = tk.Button(window, text="Quit", command=on_closing, width=10, height=2, bg="red", fg="white")
close_button.place(relx=0.95, rely=0.05, anchor=tk.NE)  # ancrage à droite en haut

# Lancer la boucle principale de l'interface utilisateur
window.mainloop()